#Check if DB Server is running on host
$wecutiloutput =""
$DBserviceName = 'MSSQLSERVER'
If (-Not(Get-Service $DBserviceName -ErrorAction SilentlyContinue)) {                                        # Continues if DB is NOT running on current host
       $wecutiloutput   =  wecutil es 2>NULL                                                                 # Write output of Subscription to var $wecutiloutput                               
        if ($wecutiloutput -eq ""){                                                                          # Check if there is an subscription 
            Output "Dedicated DB detected. No Subscription implemented!" RED ERROR                          
        } 
        else {
            Output "Subscription in Event Viewer found for DB" BLUE INFO     
        }
   }
   else {
    Output "SQL Service is running on this host" BLUE INFO      
   }

#if ( $SQLCMD -eq '1') {
#Start-Process -file $SQLCMDUTILS -arg $SQLCMDUTILSARG -Wait 
#}
#else 
#{
#write-host "Unable to install SQL command line utils, please execute queries manually"
#exit(1)
#}

param($dbu, $dbp)

function Output ( [string]$message , [string]$color, [string]$type )
{
    $dt = Get-Date
    write-Host "" | out-file -filepath $PRECHECKFOLDER\$precheck -append 
    write-Host "==> $message"  -backgroundcolor $color
	if ($type.Contains('HEAD')){
		write-output "$type - $message" | out-file -filepath $PRECHECKFOLDER\$precheck -append
	} else {
	write-output "$type;$message" | out-file -filepath $PRECHECKFOLDER\$precheck -append
	write-output " " | out-file -filepath $PRECHECKFOLDER\$precheck -append 
	}
}

function OutputNoSpace ( [string]$message , [string]$color, [string]$type )
{
    $dt = Get-Date
    write-Host "==> $message"  -backgroundcolor $color
    write-output "$type;$message" | out-file -filepath $PRECHECKFOLDER\$precheck -append
}


# Gets the specified registry value or $null if it is missing
function Get-RegistryValue ($path, $name)
{
    $key = Get-Item -LiteralPath $path -ErrorAction SilentlyContinue
    if ($key) {
        $key.GetValue($name, $null)
    }
}

# SQL Queries
#
########################################################################################################

$SQLSERVERNAME = (Get-ItemProperty -Path Registry::RegistryPathForDB.DBHOSTNAME

if (($dbu -eq $null) -and ($dbp -eq $null)) {
	$countOfReceived = sqlcmd -S $SQLSERVERNAME -d pcvnijournal -Q "select count(*) from Receive" -W -h -1 -u
	$countOfRetrieve = sqlcmd -S $SQLSERVERNAME -d pcvnijournal -Q "select count(*) from Retrieve" -W -h -1 -u
	$countOfSend = sqlcmd -S $SQLSERVERNAME -d pcvnijournal -Q "select count(*) from SendTail" -W -h -1 -u
	$querySQLVersion = sqlcmd -S $SQLSERVERNAME -Q "SELECT SERVERPROPERTY('productversion')"  -W -h -1 
	$SQLversion_name = sqlcmd -S $SQLSERVERNAME -Q "select @@VERSION" -W -h -1 -u
	$queryplazashare= sqlcmd -S $SQLSERVERNAME -d pcv_dicom_db -Q "Select * from DatabaseAccount" -W -h -1 
	$collation = sqlcmd -S $SQLSERVERNAME -Q "select  collation_name from sys.databases group by collation_name " -W -h -1 -u
    $STScount = sqlcmd -S $SQLSERVERNAME -d pcv_dicom_db -Q "select count(*) from StationStorePath" -W -h -1 -u
} else {
	$countOfReceived = sqlcmd -S $SQLSERVERNAME -d pcvnijournal -Q "select count(*) from Receive" -W -h -1 -u -U $dbu -P $dbp
	$countOfRetrieve = sqlcmd -S $SQLSERVERNAME -d pcvnijournal -Q "select count(*) from Retrieve" -W -h -1 -u -U $dbu -P $dbp
	$countOfSend = sqlcmd -S $SQLSERVERNAME -d pcvnijournal -Q "select count(*) from SendTail" -W -h -1 -u -U $dbu -P $dbp
	$querySQLVersion = sqlcmd -S $SQLSERVERNAME -Q "SELECT SERVERPROPERTY('productversion')"  -W -h -1 -U $dbu -P $dbp 
	$SQLversion_name = sqlcmd -S $SQLSERVERNAME -Q "select @@VERSION" -W -h -1 -u -U $dbu -P $dbp
	$queryDBaccount= sqlcmd -S $SQLSERVERNAME -d dbname -Q "Select * from DBuseraccount" -W -h -1 -U $dbu -P $dbp
 	$collation = sqlcmd -S $SQLSERVERNAME -Q "select  collation_name from sys.databases group by collation_name " -W -h -1 -u -U $dbu -P $dbp
    $STScount = sqlcmd -S $SQLSERVERNAME -d dbname -Q "select count(*) from StationStorePath" -W -h -1 -u -U $dbu -P $dbp
}
